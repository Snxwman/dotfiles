(defvar volume-reveal false)
(defpoll volume-level :initial "0" :interval "0.1s" "pactl get-sink-volume 0 | cut -d' ' -f6 | tr -d '%'")
(defpoll volume 
    :initial "{}" 
    :run-while volume-reveal 
    :interval "300ms" "./modules/volume/volume get")

(defwidget volume-bar []
    (eventbox
        :onhover "eww update reveal-volume=true"
        :onhoverlost "eww update reveal-volume=false"
        (box
            :class "volume"
            :space-evenly false
            :orientation "h"
            :halign "end"
            (label
                :class "output-volume-icon"
                :text "ó°•¾")
            (revealer
                :transition "slideleft"
                :duration "400ms"
                :reveal volume-reveal
                (box
                    :space-evenly false
                    (label
                        :class "output-volume-percentage"
                        :text "${volume-level}%")
                    (scale
                        :class "output-volume-scale"
                        :orientation "h"
                        :max 100 :min 0
                        :tooltip "Volume: ${volume-level}%"
                        :onchange "pactl set-sink-volume 0 {}%"
                        :value volume-level))))))

(defwidget volume [] 
    (icon
        :classes "volume-button"
        :icon '${volume.output.muted ? "${icons.audio.output-mute}" : "${icons.audio.output}"}'
        :lclick "./util/scripts/popup volume-info-window"))

(defwidget volume-info 
    [
        ?theme ?style ?type
        ?box-classes ?button-classes
        ?space-evenly ?orientation ?halign
        ?window-classes
    ]
    (box 
        :class "volume-window"
        :orientation "vertical"
        :halign "center"
        (box
            :class 
                "${volume.output.volume <= audio-opts.normal  ? 'volume-level-normal'  : 
                   volume.output.volume <= audio-opts.warning ? 'volume-level-warning' : 
                   volume.output.volume >  audio-opts.warning ? 'volume-level-danger'  : ''} 
                ${volume.output.muted == true ? 'muted' : ''}"
            :orientation "horizontal"
            :space-evenly false
            (icon
                :class "mute-button"
                :icon "${volume.output.muted ? '${icons.audio.output-mute}' : '${icons.audio.output}'}"
                :lclick "./modules/volume/volume mute output")
            (scale 
                :width 250
                :value "${volume.output.volume}"
                :orientation "horizontal"
                :onchange "./modules/volume/volume change output {}"))
        (box
            :class
                "${volume.input.volume <= audio-opts.normal  ? 'volume-level-normal'  : 
                   volume.input.volume <= audio-opts.warning ? 'volume-level-warning' : 
                   volume.input.volume >  audio-opts.warning ? 'volume-level-danger'  : ''} 
                ${volume.input.muted == true ? 'muted' : ''}"
            :orientation "horizontal"
            :space-evenly false
            (icon
                :class "mute-button ${window-classes}" 
                :icon "${volume.input.muted ? '${icons.audio.input-mute}' : '${icons.audio.input}'}"
                :lclick "./modules/volume/volume mute input")
            (scale
                :width 250
                :value "${volume.input.volume}"
                :orientation "horizontal"
                :onchange "./modules/volume/volume change input {}"))))
	

(defwindow volume-info-window
    :geometry (geometry :x 0 :y 120 :anchor "top center")
    (volume-info))
