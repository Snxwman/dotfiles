(defvar wm-state "")
(defvar reveal_layout false)

(defwidget workspace-widget [?screen]
    (box 
        :class "workspace-widget"
        :orientation "h"
        :space-evenly false
        :halign "start"
        (for workspace in "${wm-state}"
        (button 
            :class 
                'workspace-button 
                ${workspace.name} 
                ${workspace.active == "true" ? "workspace-button-active" : ""} 
                ${workspace.open_window == "true" ? "workspace-button-window" : ""}'
            :tooltip "${workspace.name}"
            :onclick "$HOME/.config/eww/scripts/wm qtile togroup ${workspace.name}"
            "${workspace.icon}"))))

(defwidget layouts-widget [screen]
    (eventbox 
        :class "layouts-widget" 
        :onhover "eww update reveal_layout=true" 
        :onhoverlost "eww update reveal_layout=false" 
        (box :class "active-layout" :space-evenly false 
            (label :class "active-layout active-layout-icon"
                   :text {replace(jq(wm-state, ".[] | select(.active == true) | select(.screen == ${screen}) | .layout_icon"), '\"', '')}
                   :tooltip {replace(jq(wm-state, ".[] | select(.active == true) | select(.screen == ${screen}) | .layout"), '\"', '')})
            (revealer :transition "slideright" :duration "600ms" :reveal reveal_layout 
                (box :class "available-layout-box"
                    (for layout in {jq(wm-state, ".[] | select(.active == true) | select(.screen == ${screen}) | .layouts")} 
                    (button 
                        :class "available-layout-button"
                        :tooltip "${layout.name}"
                        :onclick ""
                        "${layout.icon}")))))))

