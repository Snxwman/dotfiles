(deflisten cava "./modules/music/cava")
(defpoll music :initial "{}" :interval "1s" "./modules/music/music info")

(defwidget music []
    (box
        :class "music"
        :space-evenly false
        :orientation "vertical" 
        (box
            :space-evenly false
            :spacing 10
            (image
                :class "album-art"
                :image-width 30
                :image-height 30
                :path "${music.player.album.art}")
            (box
                :class "track-info"
                :space-evenly false
                :orientation "vertical"
                (label
                    :class "track-title"
                    :text "${music.player.title}")
                (label
                    :class "track-artist"
                    :text "${music.player.artist}"))
            (label 
                :class "cava"
                :truncate-left false
                :show-truncated: false
                :hexpand true 
                :text "${cava}")
            (box 
                (icon
                    :class "backwards"
                    :lclick "./modules/music/music backwards"
                    :icon "")
                (icon
                    :class "play-pause"
                    :lclick "./modules/music/music playpause"
                    :icon '${music.player.status == "playing" ? "" : ""}')
                (icon
                    :class "forwards"
                    :lclick "./modules/music/music forwards"
                    :icon "")
                (icon
                    :class 'loop ${music.player.loop == "None" ? "loop-off" : "loop-on"}'
                    :lclick "./modules/music/music loop"
                    :icon '${music.player.loop == "Track"    ? "󰑘" : 
                             music.player.loop == "Playlist" ? "󰑖" : "󰑗"}')
                (icon
                    :class "play-pause"
                    :lclick "./modules/music/music shuffle"
                    :icon '${music.player.shuffle == "true" ? "󰒟" : "󰒞"}')
            ))
        (scale
            :class "music-seeker"
            :onchange "./modules/music/music seek {}"
            :width 600
            :min 0
            :max "${music.player.duration.sec}"
            :value "${music.player.position.sec}")))
